
%name delim        	:    "[\t\r\n ]+"
                    	;

%name letter        :     "[A-Z_a-z]"
                    ;


%name digit        	:    "[0-9]"
                    	;

%name number        	:    "0|[1-9]{digit}*"
                    	;

%name name          	:    "{letter}({letter}|{digit})*"
                    	;


/* 
    '"'  == \x22,  '\'' == \x27 
*/


%name lexeme            	:    "{name}"
                    		;

%name comment        	:     "/\*([^\*]|\*+[^\*/])*\*+/"
                    		;

%name comment_line    	:     "//[^\n]*\n"
                    		;

%name skip_lexem     	:     "{delim}|{comment}|{comment_line}"
                    		;


%name key_lookahead       	:     '{skip_lexem}+|"{"'
                        	;


%token    %skip            	:    "{skip_lexem}+"
                		;


%token    CODE_BLOCK		:    '\{:[^\u0]*?:\}'            /*'\{((\\\{|\\\})|[^\{\}])*?\}'*/
				;

%token    HEAD		:    '"%head"'
				;

%token    TAIL		:    '"%tail"'
				;


%token    LEXEME		:    "{lexeme}"
                		;
                

%token    NUMBER		:    "{number}"
                		;


%token    ":"        	:    '":"'
            			;

%token    ";"        	:    '";"'
            			;

%token    "{"        	:    '"{"'
            			;

%token    "}"        	:    '"}"'
            			;


%token    "["        	:    '"["'
            			;

%token    "]"        	:    '"]"'
            			;

%start            		program    ;



program			:	item_list
				|	.
				;


item_list			:	item_list	item
				|	item
				;



item				:	head_code
				|	tail_code
				|	struct_def
				;


head_code			:	HEAD 	CODE_BLOCK
				;

tail_code			:	TAIL	CODE_BLOCK
				;



struct_def			:	LEXEME	anonymous_def ";"
				;

anonymous_def			:	"{"	def_list	"}"
				;

def_list			:	def_list	def
				|	def
				;

def				:	field	":"	type	";"
				;


field				:	LEXEME		%action	auto_return_0
				{:
					
					psrRetVal_t ret = {AR_S_YES, nodes[0]};
					nodes[0] = NULL;
					return ret;
				:}
				;

type				:	LEXEME
				|	LEXEME "["	NUMBER "]"
				|	anonymous_def
				;


