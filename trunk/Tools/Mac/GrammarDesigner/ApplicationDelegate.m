/* * Copyright (c) 2011 by Solidus * This file is part of Arsenal library tools source code. * * Permission to use, copy, modify, distribute and sell this software * and its documentation for any purpose is hereby granted without fee, * provided that the above copyright notice appear in all copies and * that both that copyright notice and this permission notice appear * in supporting documentation.It is provided "as is" without express  * or implied warranty. * */#import "ApplicationDelegate.h"#import "Preferences.h"/***********************************DefaultARContext**********************************************/@interface DefaultARContext		:		NSObject<ArsenalContext>-(void)onPrint	:		(NSString*) msg;-(void)onError	:		(NSInteger)level  msg : (NSString*)msg;@end@implementation DefaultARContext-(void)onPrint	:		(NSString*) msg{		assert(msg);		DLog(@"%@", msg);}-(void)onError	:		(NSInteger)level  msg : (NSString*)msg{		assert(msg);		DLog(@"Level == %d : msg == %@", level, msg);		}@end/***********************************DefaultARContext*********************************************End*//***********************************GrammarCheckWorker**********************************************/@interface GrammarTaskMessage : ARDuplexTaskMessage{		NSString				*sourcesCode;		const cfgConfig_t		*parseResult;}@property		(readwrite, retain) NSString				*sourcesCode;@property		(readwrite, assign) const cfgConfig_t		*parseResult;@end@implementation GrammarTaskMessage@synthesize		parseResult;@synthesize		sourcesCode;-(id)initWithSources : (NSString*)src{		self = [super initWithName : nil];		if(self)		{				[src retain];				sourcesCode = src;				parseResult = NULL;		}		return self;}-(void)dealloc{		[sourcesCode release];		sourcesCode = nil;				if(parseResult)		{				CFG_DestroyGrammarConfig(parseResult);				parseResult = NULL;		}				[super dealloc];}-(void)run{		DLog(@"GrammarTaskMessage::run");}@end@interface GrammarCheckWorker : NSObject<ARDuplexTaskDelegate>@end@implementation GrammarCheckWorker-(void)onWorkerBegin{		DLog(@"GrammarCheckWorker::onWorkerBegin");}-(void)onWorkerEnd{		DLog(@"GrammarCheckWorker::onWorkerEnd");}-(void)handleWorkerThreadMessage : (ARDuplexTaskMessage*)msg forTask : (ARDuplexTask*)task{		assert(msg != nil && task != nil);		GrammarTaskMessage *gmrMsg = (GrammarTaskMessage*)msg;		DLog(@"GrammarCheckWorker::handleWorkerThreadMessage : Sources == %@", gmrMsg.sourcesCode);		[task PostMsgToMain : msg];		}-(void)handleMainThreadMessage : (ARDuplexTaskMessage*)msg forTask : (ARDuplexTask*)task{		GrammarTaskMessage *gmrMsg = (GrammarTaskMessage*)msg;		DLog(@"GrammarCheckWorker::handleMainThreadMessage : Sources == %@", gmrMsg.sourcesCode);		[msg release];}@end/***********************************GrammarCheckWorker*********************************************End*//*********************************************************************************/@implementation ApplicationDelegate+(void)initialize{		[Preferences setDefaultPreferences];}-(id)init{		self = [super init];		if(self)		{				preferences = nil;									}				return (self);}-(void)dealloc{				[super dealloc];}- (BOOL)applicationShouldOpenUntitledFile:(NSApplication *)sender{		return YES;}- (void)applicationWillFinishLaunching:(NSNotification *)aNotification{				DLog(@"%@", aNotification);		DefaultARContext *ctx = [[DefaultARContext alloc] init];		[ArsenalOC initializeArsenalOC : ctx];		[ctx release];								/*********************************************/		grammarCheckWorker = [[GrammarCheckWorker alloc] init];		grammarCheckTask = [[ARDuplexTask alloc] init];				[grammarCheckTask setDelegate : grammarCheckWorker];				[grammarCheckTask start];		/********************************************End*/		}- (void)applicationDidFinishLaunching:(NSNotification *)aNotification{		DLog(@"%@", aNotification);}- (NSApplicationTerminateReply)applicationShouldTerminate:(NSApplication *)sender{				return NSTerminateNow;}- (void)applicationWillTerminate:(NSNotification *)aNotification{		DLog(@"%@", aNotification);				/*********************************************/		[grammarCheckTask stop];				[grammarCheckTask release];		grammarCheckTask = nil;				[grammarCheckWorker release];		grammarCheckWorker = nil;		/********************************************End*/				[ArsenalOC uninitializeArsenalOC];}/**************************************Action*************************************/-(IBAction)showPreferencePanel : (id)sender{		if(preferences == nil)		{				preferences = [[Preferences alloc] init];		}				[preferences show : self];}/**************************************TestAction*************************************/-(IBAction)onTest : (id)sender{		DLog(@"On ApplicationDelegate::OnTest");		@try{				AR_Test();		}@catch(NSException *e)		{				NSLog(@"Name == %@ reason == %@", [e name], [e reason]);		}}-(IBAction)onGrammarCheckerTest : (id)sender{		DLog(@"On ApplicationDelegate::onGrammarCheckerTest");				GrammarTaskMessage *msg = [[GrammarTaskMessage alloc] initWithSources : @"sources Tengu GrammarDesigner"];		[grammarCheckTask PostMsgToWorker : msg];}@end