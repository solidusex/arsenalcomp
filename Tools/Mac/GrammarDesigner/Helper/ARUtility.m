/* * Copyright (c) 2011 by Solidus * This file is part of Arsenal library tools source code. * * Permission to use, copy, modify, distribute and sell this software * and its documentation for any purpose is hereby granted without fee, * provided that the above copyright notice appear in all copies and * that both that copyright notice and this permission notice appear * in supporting documentation.It is provided "as is" without express  * or implied warranty. * */#import "ARUtility.h"@implementation ARUtility-(id)init{		self = [super init];				if(self)		{						}				return self;}/* size_t					AR_wcs_to_str(arCodePage_t cp, const wchar_t *input, size_t n, char *out, size_t out_len);  */+(NSString*)convertUTF32ToNSString		:		(const wchar_t*)input{		char *utf8 = NULL;		assert(input != NULL);		size_t n = wcslen(input), need_n = 0;		if(n == 0)		{				return @"";		}				need_n = AR_wcs_to_str(AR_CP_UTF8, input, n, NULL, 0);				if(need_n == 0)		{				@throw [ARStringConvertException exceptionWithReason : @"can't convert wchar* to utf8 string"];		}				utf8 = (char*)malloc(sizeof(char) * (need_n + 1));		need_n = AR_wcs_to_str(AR_CP_UTF8, input, n, utf8, need_n);				if(need_n == 0)		{				@throw [ARStringConvertException exceptionWithReason : @"can't convert wchar* to utf8 string"];		}		utf8[need_n] = 0;		NSString *ret = [NSString stringWithUTF8String : utf8];				if(utf8)		{				free(utf8);				utf8 = NULL;		}				return ret;		}+(NSString*)convertUTF32ToNSString		:		(const wchar_t*)input Length : (size_t)len{		if(len == 0)		{				return @"";		}				assert(input != NULL);				wchar_t *wcs = AR_wcsndup(input, len);		if(wcs == NULL)		{				return NULL;		}				NSString *ret = [ARUtility convertUTF32ToNSString : wcs];		AR_DEL(wcs);		wcs = NULL;		return ret;		}+(wchar_t*) convertNSStringToUTF32		:		(NSString*)input{		wchar_t *ret = NULL;		ret = (wchar_t *)[input cStringUsingEncoding:NSUTF32StringEncoding];		return ret;		}@end